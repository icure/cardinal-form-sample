{"version":3,"file":"languages.js","sourceRoot":"","sources":["../../tmp/utils/languages.ts"],"names":[],"mappings":";;;AAEa,QAAA,SAAS,GAAG;IACxB,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,QAAQ;CACiB,CAAA;AAEvB,MAAM,YAAY,GAAG,CAAC,GAAW,EAAU,EAAE,CAAC,iBAAS,CAAC,GAAG,CAAC,IAAI,GAAG,CAAA;AAA7D,QAAA,YAAY,gBAAiD;AAEnE,MAAM,0BAA0B,GAAG,CAAC,YAAgC,EAAE,EAAE,CAAC,CAAC,QAAgB,EAAE,IAAY,EAAE,EAAE,mBAClH,OAAA,MAAA,MAAA,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,KAAK,QAAQ,CAAC,0CAAE,YAAY,0CAAG,IAAI,CAAC,mCAAI,IAAI,CAAA,EAAA,CAAA;AADtE,QAAA,0BAA0B,8BAC4C","sourcesContent":["import { TranslationTable } from '../components/model'\n\nexport const languages = {\n\ten: 'English',\n\tfr: 'French',\n\tes: 'Spanish',\n\tnl: 'Dutch',\n\tde: 'German',\n} as { [key: string]: string }\n\nexport const languageName = (iso: string): string => languages[iso] || iso\n\nexport const defaultTranslationProvider = (translations: TranslationTable[]) => (language: string, text: string) =>\n\ttranslations?.find((tt) => tt.language === language)?.translations?.[text] ?? text\n"]}