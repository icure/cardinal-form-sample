{"version":3,"file":"ckmeans-grouping.js","sourceRoot":"","sources":["../../tmp/conversion/ckmeans-grouping.ts"],"names":[],"mappings":"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","sourcesContent":["import ckmeans from './ckmeans'\n\nexport const cluster = (data: number[], maxDistanceInCluster: number, minDistanceBetweenClusters: number, slots?: number) => {\n\tif (!data.length) {\n\t\treturn { centroids: [], clusters: [] }\n\t}\n\n\tlet k = slots ?? Math.max(Math.round(data.length / 5), 1) //Initialise k to a number of clusters equals to 1/5 of the number of data points\n\n\tconst history = []\n\tlet isNotStable = true\n\tlet centroids: number[] = []\n\tlet clusters: number[][] = []\n\twhile (isNotStable) {\n\t\thistory.push(k)\n\t\tisNotStable = false\n\t\tclusters = ckmeans(data, k)\n\t\tif (clusters.find((c) => !c.length)) {\n\t\t\tisNotStable = true\n\t\t\tk--\n\t\t\tcontinue\n\t\t}\n\t\tcentroids = clusters.map((a) => a.reduce((v, s) => s + v, 0) / a.length)\n\t\tconst positions = centroids.sort((a, b) => a - b)\n\n\t\tfor (let i = 0; i < positions.length - 1; i++) {\n\t\t\tconst dist = Math.abs(positions[i] - positions[i + 1])\n\t\t\tif (dist < minDistanceBetweenClusters) {\n\t\t\t\tif (!history.includes(k - 1)) {\n\t\t\t\t\tisNotStable = true\n\t\t\t\t\tk--\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (isNotStable) {\n\t\t\tcontinue\n\t\t}\n\t\tfor (let i = 0; i < clusters.length; i++) {\n\t\t\tconst maxDistance = clusters[i].reduce((s, v) => Math.max(s, Math.abs(v - centroids[i])), 0)\n\t\t\tif (maxDistance > maxDistanceInCluster) {\n\t\t\t\tisNotStable = true\n\t\t\t\tk++\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn { centroids: centroids, clusters: clusters }\n}\n"]}