{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../tmp/components/icure-text-field/schema/index.ts"],"names":[],"mappings":";;;AAAA,yDAA0C;AAC1C,uDAAmD;AACnD,yDAA8E;AAC9E,iDAA8C;AAC9C,qDAAiD;AACjD,qDAAiD;AACjD,2DAAsD;AAGtD,SAAgB,YAAY,CAC3B,IAA0B,EAC1B,aAAsE,EACtE,eAAoE;IAEpE,OAAO,IAAI,0BAAM,CAChB,IAAI,KAAK,SAAS;QACjB,CAAC,CAAC,IAAA,+BAAc,GAAE;QAClB,CAAC,CAAC,IAAI,KAAK,SAAS;YACpB,CAAC,CAAC,IAAA,+BAAc,GAAE;YAClB,CAAC,CAAC,IAAI,KAAK,MAAM;gBACjB,CAAC,CAAC,IAAA,8BAAW,GAAE;gBACf,CAAC,CAAC,IAAI,KAAK,MAAM;oBACjB,CAAC,CAAC,IAAA,8BAAW,GAAE;oBACf,CAAC,CAAC,IAAI,KAAK,WAAW;wBACtB,CAAC,CAAC,IAAA,kCAAe,GAAE;wBACnB,CAAC,CAAC,IAAI,KAAK,YAAY;4BACvB,CAAC,CAAC,IAAA,oCAAgB,GAAE;4BACpB,CAAC,CAAC,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,oBAAoB,IAAI,IAAI,KAAK,wBAAwB,IAAI,IAAI,KAAK,+BAA+B;gCAC1I,CAAC,CAAC,IAAA,4BAAa,EAAC,IAAI,EAAE,eAAe,EAAE,aAAa,CAAC;gCACrD,CAAC,CAAC,IAAA,iCAAe,EAAC,IAAI,EAAE,eAAe,EAAE,aAAa,CAAC,CACxD,CAAA;AACF,CAAC;AAtBD,oCAsBC","sourcesContent":["import { Schema } from 'prosemirror-model'\nimport { getMarkdownSpec } from './markdown-schema'\nimport { getDateSpec, getDateTimeSpec, getTimeSpec } from './date-time-schema'\nimport { getTokensSpec } from './token-schema'\nimport { getMeasureSpec } from './measure-schema'\nimport { getDecimalSpec } from './decimal-schema'\nimport { getItemsListSpec } from './items-list-schema'\nimport { IcureTextFieldSchema } from '../../model'\n\nexport function createSchema(\n\ttype: IcureTextFieldSchema,\n\tcolorProvider: (type: string, code: string, isCode: boolean) => string,\n\tcontentProvider: (codes: { type: string; code: string }[]) => string,\n): Schema {\n\treturn new Schema(\n\t\ttype === 'decimal'\n\t\t\t? getDecimalSpec()\n\t\t\t: type === 'measure'\n\t\t\t? getMeasureSpec()\n\t\t\t: type === 'date'\n\t\t\t? getDateSpec()\n\t\t\t: type === 'time'\n\t\t\t? getTimeSpec()\n\t\t\t: type === 'date-time'\n\t\t\t? getDateTimeSpec()\n\t\t\t: type === 'items-list'\n\t\t\t? getItemsListSpec()\n\t\t\t: type === 'tokens-list' || type === 'styled-tokens-list' || type === 'tokens-list-with-codes' || type === 'styled-tokens-list-with-codes'\n\t\t\t? getTokensSpec(type, contentProvider, colorProvider)\n\t\t\t: getMarkdownSpec(type, contentProvider, colorProvider),\n\t)\n}\n"]}